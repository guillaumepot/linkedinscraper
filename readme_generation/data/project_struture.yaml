# Project structure

title_project_structure: "📁 Project Structure"
project_structure_text: |
  ```
  linkedinscraper/
  ├── src/
  │   ├── job_scraping/
  │   │   ├── JobScraper.py          # Main scraping logic
  │   │   ├── BeaufitulSoupEngine.py # Web scraping engine
  │   │   ├── ElasticSearchEngine.py # Elasticsearch interface
  │   │   └── config.json            # Scraper configuration
  │   ├── ui/
  │   │   ├── app.py                 # Flask web application
  │   │   ├── templates/             # HTML templates
  │   │   └── static/                # CSS, JS, images
  │   └── utils/
  │       ├── ArgParser.py           # Command line argument parsing
  │       ├── common_func.py         # Utility functions
  │       └── LoggerManager.py       # Logging configuration
  ├── scripts/
  │   └── proxy_connection_tester.py # Proxy testing utility
  ├── tests/                         # Test files
  ├── data/                          # Data storage (created automatically)
  ├── logs/                          # Application logs
  ├── docker-compose.yaml            # Docker services configuration
  ├── pyproject.toml                 # Python project configuration
  ├── preferences.yaml               # User preferences
  └── main.py                        # Application entry point
  ```

title_development_information: "🛠️ Development"
development_information_subtitle_1: "Code Quality"
development_information_subtitle_1_text_1: |
  The project uses several tools for code quality:
  - **Ruff**: Fast Python linter and formatter
  - **Pre-commit**: Git hooks for code quality
  - **Pytest**: Testing framework
  - **Type Hints**: Enhanced code documentation
development_information_subtitle_2: "Contributing"
development_information_subtitle_1_text_2: |
  1. Fork the repository
  2. Create a feature branch
  3. Make your changes
  4. Run tests and linting
  5. Submit a pull request
